@page "/deleteStudentData"
@using BlazorWebApi2.Models

@inject HttpClient HttpClient

@* @page "/deleteStudentData"
@using BlazorWebApi2.Models

@inject HttpClient HttpClient

<label for="studentId">Enter Student ID:</label>
<input type="text" id="studentId" @bind="studentId" />
<button class="btn btn-danger" @onclick="DeleteStudent">Delete Student</button>

<div>
    <p>@deletionMessage</p>
</div>

@code {

    public string studentId { get; set; }
    public string deletionMessage { get; set; }

    private async Task DeleteStudent()
    {
        if (!string.IsNullOrEmpty(studentId))
        {
            var response = await HttpClient.DeleteAsync($"https://localhost:7214/api/Student/deleteStudentData/{studentId}");

            if (!response.IsSuccessStatusCode)
            {

                deletionMessage = $"Student with ID {studentId} was deleted successfully.";
                Console.WriteLine(deletionMessage);
            }
            else
            {
                deletionMessage = $"Error occurred while deleting student with ID {studentId}.";
            }
        }
    }


}
 *@


<h3>Delete Student</h3>

<p>Enter the Student ID you want to delete:</p>

<input type="text" @bind="studentId" />
<button class="btn btn-danger" @onclick="ShowDeleteConfirmationModal">Delete</button>

@if (isDeleted)
{
    <p>Student with ID @deletedStudentId has been deleted.</p>
}

<BlazorWebApi2.Pages.Modals.CustomModal @bind-IsVisible="isModalVisible" Title="Delete Confirmation">
<div>
        Are you sure you want to delete the student with ID @studentId?
</div>
<button class="btn btn-danger" @onclick="DeleteStudentAsync">Yes</button>
<button class="btn btn-primary" @onclick="CloseDeleteConfirmationModal">No</button>
</BlazorWebApi2.Pages.Modals.CustomModal>

@code {
    private string studentId;
    private bool isDeleted = false;
    private string deletedStudentId = "";
    private bool isModalVisible = false;

    private async Task ShowDeleteConfirmationModal()
    {
        isModalVisible = true;
    }

    private async Task CloseDeleteConfirmationModal()
    {
        isModalVisible = false;
    }

    private async Task DeleteStudentAsync()
    {
        var response = await HttpClient.DeleteAsync($"https://localhost:7214/api/Student/deleteStudentData/{studentId}");
        if (response.IsSuccessStatusCode)
        {
            isDeleted = true;
            deletedStudentId = studentId;
            isModalVisible = false; 
        }
        else
        {
            deletedStudentId = "Doesn't Exist Or ";
        }
    }
}






